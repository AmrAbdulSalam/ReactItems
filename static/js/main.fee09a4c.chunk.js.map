{"version":3,"sources":["App.js","reportWebVitals.js","index.js"],"names":["App","state","counter","id","num","items","goClear","setState","inc","forEach","element","i","subNum","map","elment","index","console","log","totalItems","x","className","htmlFor","this","onClick","size","Component","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.fee09a4c.chunk.js","sourcesContent":["\nimport './App.css';\nimport React , { Component } from 'react';\n\nimport { AiOutlineShoppingCart } from \"react-icons/ai\";\nimport { BsArrowRepeat  } from \"react-icons/bs\";\nimport { AiOutlinePlusCircle ,AiOutlineMinusCircle } from \"react-icons/ai\";\nclass App extends Component{\n\n  state = {\n    counter : [\n      {id : 1 , num : 0} ,\n      {id : 2 , num : 0} ,\n      {id : 3 , num : 0} ,\n      {id : 4 , num : 0} \n    ],\n    items : [0 , 0 , 0 ,0],\n\n  }\n\n  goClear = () =>{\n    let counter = [\n      {id : 1 , num : 0} ,\n      {id : 2 , num : 0} ,\n      {id : 3 , num : 0} ,\n      {id : 4 , num : 0}\n    ]\n    this.setState({\n      counter\n    })\n  }\n\n  inc = (id) => {\n    \n      const counter = [...this.state.counter]\n      const items = [...this.state.items]\n      counter.forEach((element , i) => {\n        if(element.id === id){\n          counter[i].num += 1;\n          items[id-1] = 1;\n        }\n      })\n      this.setState({\n        counter : counter ,\n        items : items\n      })\n    \n  }\n\n  subNum = (id) => {\n    let counter = [...this.state.counter];\n    let items = [...this.state.items]\n       counter.map((elment  , index) => {\n      if(elment.id === id){\n        if(counter[index].num === 0 ){\n          console.log('its zero')\n        }else{\n          counter[index].num -= 1;\n          if(counter[index].num === 0){\n            items[id-1] = 0\n            this.setState({\n              items : items\n            })\n              }\n        }\n      }\n    })\n    this.setState({\n      counter : counter ,\n      items : items\n    })\n    \n    \n  }\n\n  totalItems = () => {\n    const {items} = this.state;\n    let x = 0;\n    items.map(elment => {\n      x += elment;\n    })\n    return x;\n    \n  }\n\n \n  render(){\n    \n    return(\n      <div className=\"container\">\n        <div className=\"items\">\n          <nav>\n            <AiOutlineShoppingCart  id = 'shopping'/>\n            <label htmlFor=\"\" className = 'totallable'>\n              {this.totalItems()}\n            </label>\n            <label htmlFor=\"\">\n              Items\n            </label>\n          </nav>\n        </div>\n        <div className=\"buttons\">\n            {/* refresh button */}\n            <BsArrowRepeat onClick = {this.goClear} size = '25px'/>\n            <br/>\n            <div className=\"firstone\" >\n            <label htmlFor=\"\" className='alllabels'>\n              {this.state.counter[0].num}\n            </label>\n            <AiOutlinePlusCircle onClick = {() => {this.inc(1)}} size = '25px'/>\n            <AiOutlineMinusCircle onClick = {() => {this.subNum(1)}} size = '25px'/>\n            <br/>\n            <br/>\n            <label htmlFor=\"\" className='alllabels'>\n              {this.state.counter[1].num}\n            </label>\n            <AiOutlinePlusCircle onClick = {() => {this.inc(2)}} size = '25px'/>\n            <AiOutlineMinusCircle onClick = {() => {this.subNum(2)}} size = '25px'/>\n            <br/>\n            <br/>\n            <label htmlFor=\"\" className='alllabels'>\n              {this.state.counter[2].num}\n            </label>\n            <AiOutlinePlusCircle onClick = {() => {this.inc(3)}} size = '25px'/>\n            <AiOutlineMinusCircle onClick = {() => {this.subNum(3)}} size = '25px'/>\n            <br/>\n            <br/>\n            <label htmlFor=\"\" className='alllabels'>\n              {this.state.counter[3].num}\n            </label> \n            <AiOutlinePlusCircle onClick = {() => {this.inc(4)}} size = '25px'/>\n            <AiOutlineMinusCircle onClick = {() => {this.subNum(4)}} size = '25px'/>\n            \n\n            </div>\n        </div>\n      </div>\n    );\n  }\n}\n\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}